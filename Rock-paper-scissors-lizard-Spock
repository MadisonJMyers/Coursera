# Testing template for number_to_name()

###################################################
# Copy and paste your definition of number_to_name() here
#0 - rock
#1 - Spock
#2 - paper
#3 - lizard
#4 - scissors


###################################################
# Test calls to number_to_name()


from random import randrange

def number_to_name(number):
    if number == 0:
        return "rock"
    elif number == 1:
        return "Spock"
    elif number == 2:
        return "paper"
    elif number == 3:
        return "lizard"
    elif number == 4:
        return "scissors"
    else:
        return "invalid"

    
def name_to_number(name):
    if name == "rock":
        return 0
    elif name == "Spock":
        return 1
    elif name == "paper":
        return 2
    elif name == "lizard":
        return 3
    elif name == "scissors":
        return 4
    else:
        return -1

def rpsls(name): 
    player_number = name_to_number(name)
    comp_number = randrange(0,5)
    comp_name = number_to_name(comp_number)
    print 'Player chooses', name
    print 'Computer chooses', comp_name
    if 1<=(player_number - comp_number) % 5<=2:
        print 'Yooo Congrats! Player aka you, wins!'
    elif (player_number - comp_number) % 5 >2:
        print 'Computer wins...meh'
    else:
        print 'Player and computer tie! Will man or computer win? Play again to see.'
    print 

    
# test your code
rpsls("rock")
rpsls("Spock")
rpsls("paper")
rpsls("lizard")
rpsls("scissors")

###################################################
# Output to the console should have the form:
# rock
# Spock
# paper
# lizard
# scissors
